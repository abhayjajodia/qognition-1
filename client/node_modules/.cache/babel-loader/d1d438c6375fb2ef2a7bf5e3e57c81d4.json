{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nfunction postReducer(state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: state.post.comments.filter(comment => comment._id !== payload)\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default postReducer;","map":{"version":3,"sources":["C:/Users/praba/OneDrive/Desktop/devconnector_2.0/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","postReducer","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"mappings":"AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,QALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,cARF,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,SAASC,WAAT,CAAqBC,KAAK,GAAGN,YAA7B,EAA2CO,MAA3C,EAAmD;AACjD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKhB,SAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELL,QAAAA,KAAK,EAAEQ,OAFF;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,QAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,IAAI,EAAEO,OAFD;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,QAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,KAAK,EAAE,CAACQ,OAAD,EAAU,GAAGH,KAAK,CAACL,KAAnB,CAFF;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKR,WAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYS,MAAZ,CAAoBR,IAAD,IAAUA,IAAI,CAACS,GAAL,KAAaF,OAA1C,CAFF;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKV,UAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELF,QAAAA,KAAK,EAAEK,OAFF;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,YAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYW,GAAZ,CAAiBV,IAAD,IACrBA,IAAI,CAACS,GAAL,KAAaF,OAAO,CAACI,EAArB,GAA0B,EAAE,GAAGX,IAAL;AAAWY,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAA1B,SAA1B,GAA8DZ,IADzD,CAFF;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,IAAI,EAAE,EAAE,GAAGI,KAAK,CAACJ,IAAX;AAAiBa,UAAAA,QAAQ,EAAEN;AAA3B,SAFD;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,IAAI,EAAE,EACJ,GAAGI,KAAK,CAACJ,IADL;AAEJa,UAAAA,QAAQ,EAAET,KAAK,CAACJ,IAAN,CAAWa,QAAX,CAAoBL,MAApB,CACPM,OAAD,IAAaA,OAAO,CAACL,GAAR,KAAgBF,OADrB;AAFN,SAFD;AAQLN,QAAAA,OAAO,EAAE;AARJ,OAAP;;AAUF;AACE,aAAOG,KAAP;AAzDJ;AA2DD;;AAED,eAAeD,WAAf","sourcesContent":["import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nfunction postReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          )\r\n        },\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default postReducer;\r\n"]},"metadata":{},"sourceType":"module"}
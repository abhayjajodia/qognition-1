{"ast":null,"code":"import api from '../utils/api';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, ACCOUNT_DELETED } from './types'; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await api.get('/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get profile by ID\n// export const getProfileById = (userId) => async (dispatch) => {\n//   try {\n//     const res = await api.get(`/profile/user/${userId}`);\n//     dispatch({\n//       type: GET_PROFILE,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n// Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async (dispatch) => {\n  try {\n    const res = await api.post('/profile', formData);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete account & profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await api.delete('/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been permanently deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/praba/OneDrive/Desktop/devconnector_2.0/client/src/actions/profile.js"],"names":["api","setAlert","GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","ACCOUNT_DELETED","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","post","push","errors","forEach","error","deleteAccount","window","confirm","delete"],"mappings":"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","sourcesContent":["import api from '../utils/api';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED\r\n} from './types';\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get('/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n\r\n// Get profile by ID\r\n// export const getProfileById = (userId) => async (dispatch) => {\r\n//   try {\r\n//     const res = await api.get(`/profile/user/${userId}`);\r\n\r\n//     dispatch({\r\n//       type: GET_PROFILE,\r\n//       payload: res.data\r\n//     });\r\n//   } catch (err) {\r\n//     dispatch({\r\n//       type: PROFILE_ERROR,\r\n//       payload: { msg: err.response.statusText, status: err.response.status }\r\n//     });\r\n//   }\r\n// };\r\n\r\n\r\n// Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await api.post('/profile', formData);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n\r\n// Delete account & profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\r\n    try {\r\n      await api.delete('/profile');\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert('Your account has been permanently deleted'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}